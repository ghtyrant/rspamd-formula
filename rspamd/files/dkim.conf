{% set dkim = salt['pillar.get']('rspamd:dkim', {}) %}

sign_condition =<<EOD
return function(task)
  local rspamd_logger = require "rspamd_logger"

  local domains = {
    {% for domain, _ in dkim.get('domains', {}).iteritems() %}
    '{{ domain }}',
    {% endfor %}
  }

  local from = task:get_from('smtp')
  if from and from[1]['addr'] then
    for _,d in ipairs(domains) do
      if string.match(from[1]['addr'], '@(.+)$') == d then

        local ip = task:get_ip()
        if not task:get_user() and not (ip and ip:is_local()) then
          rspamd_logger.infox(task, "skip DKIM signing for unauthorized user from non-local network")
          return false
        end
        -- Keys are searched in `/usr/local/etc/dkim/domain.dkim.key`
        -- You can generate them using the following command:
        -- rspamadm dkim_keygen -s 'dkim' -d 'example.com' -k /usr/local/etc/dkim/example.com.dkim.key
        return {
          key = "{{ dkim.get('base_dir', '/etc/rspamd/dkim') }}/" .. d .. ".dkim.key",
          domain = d,
          selector = "dkim"
        }
      end
    end
  end

  return false
end
EOD;
